[{"/home/vladichka/siteToHost/client/src/index.js":"1","/home/vladichka/siteToHost/client/src/reportWebVitals.js":"2","/home/vladichka/siteToHost/client/src/App.js":"3","/home/vladichka/siteToHost/client/src/store/reducers/workersReducer.js":"4","/home/vladichka/siteToHost/client/src/store/reducers/workReducer.js":"5","/home/vladichka/siteToHost/client/src/store/reducers/taskReducer.js":"6","/home/vladichka/siteToHost/client/src/store/reducers/userReducer.js":"7","/home/vladichka/siteToHost/client/src/store/reducers/reportReducer.js":"8","/home/vladichka/siteToHost/client/src/store/sagas/index.js":"9","/home/vladichka/siteToHost/client/src/store/sagas/job.js":"10","/home/vladichka/siteToHost/client/src/store/sagas/reports.js":"11","/home/vladichka/siteToHost/client/src/functions/getCookie.js":"12","/home/vladichka/siteToHost/client/src/store/actions/index.js":"13","/home/vladichka/siteToHost/client/src/hoc/Layout/Layout.js":"14","/home/vladichka/siteToHost/client/src/store/actions/actionTypes.js":"15","/home/vladichka/siteToHost/client/src/containers/Auth/Auth.js":"16","/home/vladichka/siteToHost/client/src/containers/Logout/Logout.js":"17","/home/vladichka/siteToHost/client/src/containers/Login/Login.js":"18","/home/vladichka/siteToHost/client/src/containers/Works/Works.js":"19","/home/vladichka/siteToHost/client/src/containers/Works/CreateWork/CreateWork.js":"20","/home/vladichka/siteToHost/client/src/containers/GetJob/GetJob.js":"21","/home/vladichka/siteToHost/client/src/containers/Tasks/MyTasks.js":"22","/home/vladichka/siteToHost/client/src/containers/SelectedWorkWorkers/SelectedWorkWorkers.js":"23","/home/vladichka/siteToHost/client/src/containers/SelectedTasks/SelectedTasks.js":"24","/home/vladichka/siteToHost/client/src/containers/Reports/Reports.js":"25","/home/vladichka/siteToHost/client/src/containers/Profile/Profile.js":"26","/home/vladichka/siteToHost/client/src/components/About/About.js":"27","/home/vladichka/siteToHost/client/src/store/sagas/work.js":"28","/home/vladichka/siteToHost/client/src/store/sagas/auth.js":"29","/home/vladichka/siteToHost/client/src/store/sagas/workers.js":"30","/home/vladichka/siteToHost/client/src/store/sagas/user.js":"31","/home/vladichka/siteToHost/client/src/store/sagas/tasks.js":"32","/home/vladichka/siteToHost/client/src/store/actions/work.js":"33","/home/vladichka/siteToHost/client/src/store/actions/workers.js":"34","/home/vladichka/siteToHost/client/src/store/actions/auth.js":"35","/home/vladichka/siteToHost/client/src/store/actions/reports.js":"36","/home/vladichka/siteToHost/client/src/store/actions/user.js":"37","/home/vladichka/siteToHost/client/src/store/actions/job.js":"38","/home/vladichka/siteToHost/client/src/store/actions/tasks.js":"39","/home/vladichka/siteToHost/client/src/functions/getWorkByPassword.js":"40","/home/vladichka/siteToHost/client/src/store/actions/actions.js":"41","/home/vladichka/siteToHost/client/src/functions/getUserWorks.js":"42","/home/vladichka/siteToHost/client/src/functions/getWorkersByWork.js":"43","/home/vladichka/siteToHost/client/src/functions/validity.js":"44","/home/vladichka/siteToHost/client/src/containers/Tasks/TaskConponent/TaskComponent.js":"45","/home/vladichka/siteToHost/client/src/components/Report/Report.js":"46","/home/vladichka/siteToHost/client/src/components/Task/Task.js":"47","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/Toolbar.js":"48","/home/vladichka/siteToHost/client/src/components/UI/Card/Card.js":"49","/home/vladichka/siteToHost/client/src/components/UI/Button/Button.js":"50","/home/vladichka/siteToHost/client/src/components/UI/Input/Input.js":"51","/home/vladichka/siteToHost/client/src/components/UI/Spinner/Spinner.js":"52","/home/vladichka/siteToHost/client/src/components/User/User.js":"53","/home/vladichka/siteToHost/client/src/components/Works/WorkComponent/WorkComponent.js":"54","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js":"55","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/Logo/Logo.js":"56","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js":"57","/home/vladichka/siteToHost/client/src/contexts/SocketProvider.js":"58"},{"size":1679,"mtime":1611063288423,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1609098394538,"results":"61","hashOfConfig":"60"},{"size":2851,"mtime":1613496831862,"results":"62","hashOfConfig":"60"},{"size":1717,"mtime":1609098394542,"results":"63","hashOfConfig":"60"},{"size":2900,"mtime":1609098394542,"results":"64","hashOfConfig":"60"},{"size":2039,"mtime":1609202923510,"results":"65","hashOfConfig":"60"},{"size":3865,"mtime":1611679377791,"results":"66","hashOfConfig":"60"},{"size":643,"mtime":1609202957026,"results":"67","hashOfConfig":"60"},{"size":2159,"mtime":1613473371750,"results":"68","hashOfConfig":"60"},{"size":3756,"mtime":1610462888174,"results":"69","hashOfConfig":"60"},{"size":1824,"mtime":1610470389232,"results":"70","hashOfConfig":"60"},{"size":329,"mtime":1610193133065,"results":"71","hashOfConfig":"60"},{"size":549,"mtime":1611678828782,"results":"72","hashOfConfig":"60"},{"size":332,"mtime":1610544480810,"results":"73","hashOfConfig":"60"},{"size":4565,"mtime":1611679484700,"results":"74","hashOfConfig":"60"},{"size":5771,"mtime":1609098394538,"results":"75","hashOfConfig":"60"},{"size":840,"mtime":1610192886251,"results":"76","hashOfConfig":"60"},{"size":5632,"mtime":1611678765842,"results":"77","hashOfConfig":"60"},{"size":2524,"mtime":1610196261614,"results":"78","hashOfConfig":"60"},{"size":5516,"mtime":1609098394538,"results":"79","hashOfConfig":"60"},{"size":4137,"mtime":1609098394538,"results":"80","hashOfConfig":"60"},{"size":1135,"mtime":1609098394538,"results":"81","hashOfConfig":"60"},{"size":2318,"mtime":1611066972219,"results":"82","hashOfConfig":"60"},{"size":1304,"mtime":1609197375961,"results":"83","hashOfConfig":"60"},{"size":1117,"mtime":1609202462222,"results":"84","hashOfConfig":"60"},{"size":2380,"mtime":1613473017424,"results":"85","hashOfConfig":"60"},{"size":3280,"mtime":1610620825673,"results":"86","hashOfConfig":"60"},{"size":2627,"mtime":1610399542335,"results":"87","hashOfConfig":"60"},{"size":4143,"mtime":1613473342386,"results":"88","hashOfConfig":"60"},{"size":2689,"mtime":1610467587617,"results":"89","hashOfConfig":"60"},{"size":2827,"mtime":1613473943770,"results":"90","hashOfConfig":"60"},{"size":3596,"mtime":1613497099501,"results":"91","hashOfConfig":"60"},{"size":1651,"mtime":1610399279822,"results":"92","hashOfConfig":"60"},{"size":1128,"mtime":1610466982153,"results":"93","hashOfConfig":"60"},{"size":1576,"mtime":1611679211854,"results":"94","hashOfConfig":"60"},{"size":1191,"mtime":1610470384548,"results":"95","hashOfConfig":"60"},{"size":1101,"mtime":1611063035589,"results":"96","hashOfConfig":"60"},{"size":1013,"mtime":1610457086409,"results":"97","hashOfConfig":"60"},{"size":2272,"mtime":1610468150123,"results":"98","hashOfConfig":"60"},{"size":418,"mtime":1609098394538,"results":"99","hashOfConfig":"60"},{"size":821,"mtime":1611678876511,"results":"100","hashOfConfig":"60"},{"size":276,"mtime":1610377813893,"results":"101","hashOfConfig":"60"},{"size":692,"mtime":1609098394538,"results":"102","hashOfConfig":"60"},{"size":715,"mtime":1609098394538,"results":"103","hashOfConfig":"60"},{"size":3746,"mtime":1609098394538,"results":"104","hashOfConfig":"60"},{"size":535,"mtime":1609212480010,"results":"105","hashOfConfig":"60"},{"size":1745,"mtime":1610621245490,"results":"106","hashOfConfig":"60"},{"size":749,"mtime":1613496871294,"results":"107","hashOfConfig":"60"},{"size":495,"mtime":1609098394538,"results":"108","hashOfConfig":"60"},{"size":383,"mtime":1611678230689,"results":"109","hashOfConfig":"60"},{"size":2031,"mtime":1609098394538,"results":"110","hashOfConfig":"60"},{"size":202,"mtime":1609098394538,"results":"111","hashOfConfig":"60"},{"size":8882,"mtime":1613497270823,"results":"112","hashOfConfig":"60"},{"size":4650,"mtime":1610196308807,"results":"113","hashOfConfig":"60"},{"size":1469,"mtime":1610977921786,"results":"114","hashOfConfig":"60"},{"size":380,"mtime":1609210609116,"results":"115","hashOfConfig":"60"},{"size":1736,"mtime":1613496734900,"results":"116","hashOfConfig":"60"},{"size":593,"mtime":1613496932299,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"4bevnf",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"120"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/home/vladichka/siteToHost/client/src/index.js",[],["261","262"],"/home/vladichka/siteToHost/client/src/reportWebVitals.js",[],"/home/vladichka/siteToHost/client/src/App.js",["263","264","265","266","267"],"import React, { useCallback } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./containers/Login/Login\";\nimport Auth from \"./containers/Auth/Auth\";\nimport About from \"./components/About/About\";\nimport Logout from \"./containers/Logout/Logout\";\nimport Works from \"./containers/Works/Works\";\nimport CreateWork from \"./containers/Works/CreateWork/CreateWork\";\nimport GetJob from \"./containers/GetJob/GetJob\";\nimport MyTasks from \"./containers/Tasks/MyTasks\";\nimport SelectedWorkWorkers from \"./containers/SelectedWorkWorkers/SelectedWorkWorkers\";\nimport SelectedTasks from \"./containers/SelectedTasks/SelectedTasks\";\nimport WorkersReports from \"./containers/Reports/Reports\";\nimport getCookie from \"./functions/getCookie\";\nimport Profile from \"./containers/Profile/Profile\";\nimport * as actions from \"./store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nconst App = (props) => {\n  useEffect(() => {\n    console.log(\"again\");\n\n    if (document.cookie) {\n      let cookies = getCookie(document.cookie);\n      if (cookies.userId == \"null\" || cookies.token == \"null\") {\n      } else {\n        props.onAutoSignUp(cookies.userId, cookies.token);\n      }\n    }\n  }, [document.cookie]);\n  let routes = null;\n  if (props.token) {\n    console.log(props.userId);\n    routes = (\n      <Switch>\n        <Route path=\"/workersReports\" component={WorkersReports} />\n        <Route path=\"/myTasks\" component={MyTasks} />\n        <Route path=\"/getJob\" component={GetJob} />\n        <Route path=\"/createNewJob\" component={CreateWork} />\n        <Route path=\"/myWorks\" component={Works} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/selectedWorkers\" component={SelectedWorkWorkers} />\n        <Route path=\"/selectedTasks\" component={SelectedTasks} />\n        <Route path=\"/profile\" component={Profile} />\n        <Redirect to=\"/about\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/about\" component={About} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <SocketProvider id={props.userId}>\n      <Layout>{routes}</Layout>\n    </SocketProvider>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAutoSignUp: (userId, token) =>\n      dispatch(actions.autoSignUp(userId, token)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/vladichka/siteToHost/client/src/store/reducers/workersReducer.js",[],"/home/vladichka/siteToHost/client/src/store/reducers/workReducer.js",["268"],"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  works: [],\n  loading: false,\n  error: false,\n  redirectWork: null,\n  worksTask: [],\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPLOAD_WORKS_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.UPLOAD_WORKS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.UPLOAD_WORKS_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        works: action.works,\n      };\n    }\n    case actionTypes.REMOVE_WORK_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.REMOVE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.REMOVE_WORK_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        works: action.works,\n        redirectWork: \"/myWorks\",\n      };\n    }\n    case actionTypes.GET_JOB_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_JOB_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.GET_JOB_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        redirectWork: \"/about\",\n      };\n    }\n    case actionTypes.SET_REDIRECT_WORK_PATH: {\n      if (action.path == \"null\") {\n        return {\n          ...state,\n          redirectWork: null,\n        };\n      } else {\n        return {\n          ...state,\n          redirectWork: action.path,\n        };\n      }\n    }\n    //\n    //\n    //\n    case actionTypes.GET_WORKS_TASKS_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_WORKS_TASKS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.GET_WORKS_TASKS_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        worksTask: action.worksTask,\n      };\n    }\n    //\n    //\n    //\n    case actionTypes.LEAVE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.LEAVE_WORK_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.LEAVE_WORK_SUCCESS: {\n     \n      return {\n        ...state,\n        error: false,\n        loading: false,\n        worksTask:action.newTasks,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","/home/vladichka/siteToHost/client/src/store/reducers/taskReducer.js",[],"/home/vladichka/siteToHost/client/src/store/reducers/userReducer.js",["269","270"],"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  redirect: null,\n  loading: null,\n  avatar: null,\n  nickname: null,\n  dataBaseId: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTO_SIGN_UP_SUCCES: {\n      return { ...state, userId: action.userId, token: action.token };\n    }\n    case actionTypes.AUTH_SUCCESS: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        redirect: \"/login\",\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.LOGIN_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n        redirect: null,\n      };\n      return;\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      return {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        redirect: \"/about\",\n        loading: false,\n      };\n    }\n    case actionTypes.SET_PATH: {\n      if (action.path == \"null\") {\n        return {\n          ...state,\n          redirect: null,\n        };\n      } else {\n        return {\n          ...state,\n          redirect: action.path,\n        };\n      }\n    }\n    case actionTypes.LOGOUT: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.CREATE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.CREATE_WORK_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.CREATE_WORK_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        redirect: \"/myWorks\",\n      };\n    }\n    case actionTypes.UPLOAD_IMAGE_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.UPLOAD_IMAGE_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.UPLOAD_IMAGE_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        avatar: action.url,\n      };\n    }\n    case actionTypes.UPLOAD_PROFILE_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.UPLOAD_PROFILE_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.UPLOAD_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        avatar: action.avatar,\n        nickname: action.nickname,\n      };\n    }\n    case actionTypes.GOOGLE_AUTH_SUCCESS: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        redirect: \"/about\",\n        loading: false,\n      };\n    }\n    case actionTypes.GOOGLE_AUTH_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.GOOGLE_AUTH_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","/home/vladichka/siteToHost/client/src/store/reducers/reportReducer.js",[],"/home/vladichka/siteToHost/client/src/store/sagas/index.js",[],"/home/vladichka/siteToHost/client/src/store/sagas/job.js",["271","272","273","274","275","276","277","278","279"],"import { put, select } from \"redux-saga/effects\";\nimport * as actions from \"../actions/job\";\nimport axios from \"axios\";\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\nexport function* getJobSaga(action) {\n  let password = action.password;\n  let userId = action.userId;\n  let token = action.token;\n  yield put(actions.getJobStart());\n  if (password.length != 36)\n    yield put(actions.getJobFail(\"Ooops,password must be 36 characters long\"));\n  else {\n    try {\n      let response = yield axios.get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      );\n      let allWorks = response.data;\n      let findedWork = getWorkByPassword(allWorks, password);\n      if (findedWork.error) throw `${findedWork.error}`;\n      else {\n        let findedWorkValue = findedWork.work;\n        let updatedWorkers = [];\n        console.log(findedWorkValue + \"findedWork\");\n        if (findedWorkValue.workers) {\n          console.log(findedWorkValue.workers + \"findedWork.workers\");\n          updatedWorkers = findedWorkValue.workers;\n          for (let existedWorker of updatedWorkers) {\n            if (existedWorker == userId) {\n              throw `You already work at this job`;\n            }\n          }\n          updatedWorkers.push(userId);\n        } else updatedWorkers.push(userId);\n        console.log(updatedWorkers + \"updated workers\");\n        let updatedWork = { ...findedWorkValue, workers: updatedWorkers };\n        console.log(findedWork.id);\n        yield axios.patch(\n          `https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWorkValue.id}.json?auth=${token}`,\n          updatedWork\n        );\n        yield put(actions.getJobSuccess());\n      }\n    } catch (error) {\n      if (typeof error == \"string\") yield put(actions.getJobFail(error));\n      else yield put(actions.getJobFail(\"Ooops, some propblem exists\"));\n    }\n  }\n}\nexport function* leaveJobSaga(action) {\n  let workId = action.workId;\n  let userId = action.userId;\n  let token = action.token;\n  try {\n    yield put(actions.leaveWorkStart());\n    let response = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n    );\n    let selectedWork = response.data[workId];\n    console.log(selectedWork);\n    let workersIdSelectedWork = selectedWork.workers;\n    console.log(workersIdSelectedWork);\n    let selfLeaveFromWork = workersIdSelectedWork.filter(\n      (workerId) => workerId != userId\n    );\n    let updatedWork = { ...selectedWork, workers: selfLeaveFromWork };\n    yield axios.patch(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`,\n      updatedWork\n    );\n    let state = yield select();\n    let updatedTasks = state.works.worksTask.filter((w) => w.id != workId);\n    console.log(updatedTasks);\n    let allTasksObject = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`\n    );\n    let tasksToDelete = [];\n    let allTasksObjectData = allTasksObject.data;\n    Object.keys(allTasksObjectData).map((key) => {\n      console.log(key);\n      console.log(allTasksObjectData[key]);\n      if (\n        allTasksObjectData[key].workId == workId &&\n        allTasksObjectData[key].recipientId == userId\n      )\n        tasksToDelete.push({ ...allTasksObjectData[key], id: key });\n    });\n    console.log(tasksToDelete);\n    for (let i = 0; i < tasksToDelete.length; i++) {\n      yield axios.delete(\n        `https://strongmanagment-default-rtdb.firebaseio.com/tasks/${tasksToDelete[i].id}.json?auth=${token}`\n      );\n    }\n    yield put(actions.leaveWorkSuccess(updatedTasks));\n  } catch (err) {\n    console.log(err);\n    yield put(actions.leaveWorkFail(err));\n  }\n}\n","/home/vladichka/siteToHost/client/src/store/sagas/reports.js",["280","281","282"],"import { put, select } from \"redux-saga/effects\";\nimport * as actions from \"../actions/reports\";\nimport axios from \"axios\";\nexport function* sendReportSaga(action) {\n  let token = action.token;\n  let taskId = action.taskId;\n  let googleLink = action.googleLink;\n  let name = action.name;\n  let description = action.description;\n  let ownerId = action.ownerId;\n  yield put(actions.sendArticleStart());\n  try {\n    yield axios.delete(\n      `https://strongmanagment-default-rtdb.firebaseio.com/tasks/${taskId}.json?auth=${token}`\n    );\n    yield axios.post(\n      `https://strongmanagment-default-rtdb.firebaseio.com/reports.json?auth=${token}`,\n      {\n        name: name,\n        description: description,\n        answer: googleLink,\n        ownerId: ownerId,\n      }\n    );\n    yield put(actions.sendArticleSuccess(taskId));\n  } catch (error) {\n    console.log(error);\n    if (typeof error == \"string\") yield put(actions.sendArticleFail(error));\n    else yield put(actions.sendArticleFail(\"Something went wrong\"));\n  }\n}\nexport function* uploadReportsSaga(action) {\n  let ownerId = action.ownerId;\n  let token = action.token;\n  yield put(actions.uploadReportsStart());\n  try {\n    let response = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/reports.json?auth=${token}`\n    );\n    let reportsObject = response.data;\n    let reportsArray = [];\n    Object.keys(reportsObject).map((key) => {\n      if (reportsObject[key].ownerId == ownerId) {\n        reportsArray.push({ ...reportsObject[key], id: key });\n      }\n    });\n    yield put(actions.uploadReportsSuccess(reportsArray));\n  } catch (error) {\n    console.log(error);\n    if (typeof error == \"string\") yield put(actions.uploadReportsFail(error));\n    else {\n      yield put(actions.uploadReportsFail(\"Something went wrong\"));\n    }\n  }\n}\n","/home/vladichka/siteToHost/client/src/functions/getCookie.js",[],"/home/vladichka/siteToHost/client/src/store/actions/index.js",[],"/home/vladichka/siteToHost/client/src/hoc/Layout/Layout.js",[],"/home/vladichka/siteToHost/client/src/store/actions/actionTypes.js",[],"/home/vladichka/siteToHost/client/src/containers/Auth/Auth.js",["283"],"import React, { Component } from \"react\";\nimport classes from \"./Auth.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Auth extends Component {\n  state = {\n    controls: {\n      nickname: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"VladichBub\",\n        },\n        label: \"Nickname\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 4,\n          isEmail: false,\n        },\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n      confirmPassword: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n        },\n        label: \"Confirm password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.controls.confirmPassword.value,\n      this.state.controls.nickname.value\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Authentification\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (login, password, repeatPassword, nickname) =>\n      dispatch(actions.auth(login, password, repeatPassword, nickname)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","/home/vladichka/siteToHost/client/src/containers/Logout/Logout.js",[],"/home/vladichka/siteToHost/client/src/containers/Login/Login.js",["284","285","286"],"import React, { Component } from \"react\";\nimport classes from \"./Login.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport GoogleImg from \"../../components/User/google.jpg\";\nclass Login extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    if (this.props.token) {\n      this.props.setRedirectPath(\"/\");\n    } else {\n      this.props.setRedirectPath(\"null\");\n    }\n  }\n  GoogleAuth = () => {\n    this.props.onGoogleLogin();\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onLogin(\n      this.state.controls.email.value,\n      this.state.controls.password.value\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Log in\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <div className={classes.loginTypes}>\n              <img\n                onClick={this.GoogleAuth}\n                className={classes.Oauth}\n                src={GoogleImg}\n              ></img>\n              <ButtonElement myClass=\"setting\" btnType=\"Success\">\n                OK\n              </ButtonElement>\n              <img className={classes.Oauth} src={GoogleImg}></img>\n            </div>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    onGoogleLogin: () => dispatch(actions.googleAuth()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/vladichka/siteToHost/client/src/containers/Works/Works.js",["287","288","289"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass MyWorks extends Component {\n  state = {\n    works: [],\n    didComponentsLoad: false,\n\n  };\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n    console.log(this.props.works);\n    this.props.setRedirectPath(\"null\");\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.works != this.props.works) {\n      this.setState({ didComponentsLoad: true });\n      this.state.works = this.props.works;\n    }\n  }\n  setCopiedText = (text) => {\n    this.setState({ copiedText: text });\n  };\n\n  render() {\n    let spinner = null;\n    if (this.props.loadingWork) {\n      spinner = <Spinner />;\n    }\n    let worksRender;\n    if (this.state.didComponentsLoad == false) {\n      worksRender = this.props.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n            workers={work.workers ? work.workers : null}\n            index={id}\n          />\n        );\n      });\n    } else {\n      worksRender = this.state.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n            workers={work.workers ? work.workers : null}\n            index={id}\n           \n          />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        {spinner}\n        <ul className={classes.WorkList}>{worksRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    loadingWork: state.works.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadWorks: (userId, token) =>\n      dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\n","/home/vladichka/siteToHost/client/src/containers/Works/CreateWork/CreateWork.js",["290","291","292"],"import React, { Component } from \"react\";\nimport classes from \"../../Login/Login.module.css\";\nimport classesTwo from \"./CreateWork.module.css\";\nimport Card from \"../../../components/UI/Card/Card\";\nimport InputElement from \"../../../components/UI/Input/Input\";\nimport ButtonElement from \"../../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nclass CreateWork extends Component {\n  state = {\n    controls: {\n      WorkName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"Dota 2\",\n        },\n        label: \"Work name\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 1,\n          maxLength: 20,\n          isEmail: false,\n        },\n      },\n      WorkDescription: {\n        elementType: \"textarea\",\n        elementConfig: {\n          type: \"\",\n          placeholder:\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\n        },\n        label: \"Description\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 3,\n          maxLength: 500,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    this.props.setRedirectPath(\"null\");\n  }\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onCreateWork(\n      this.state.controls.WorkName.value,\n      this.state.controls.WorkDescription.value,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\n      redirect = null;\n    }\n\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Create new work\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">CREATE</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId,\n        error: state.auth.error,\n        redirect: state.auth.redirect,\n        loading: state.auth.loading,\n      };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCreateWork: (name, description, userId, token) =>\n      dispatch(actions.createWork(name, description, userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWork);\n","/home/vladichka/siteToHost/client/src/containers/GetJob/GetJob.js",["293"],"import React, { Component } from \"react\";\nimport classes from \"../Login/Login.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport checkValidity from \"../../functions/validity\";\nclass GetJob extends Component {\n  state = {\n    controls: {\n      jobPassCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"2bod7f22-453a-11eb-b378-0242ac130002\",\n        },\n        label: \"Pass code\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 36,\n          maxLength: 36,\n          isEmail: false,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onGetJob(\n      this.state.controls.jobPassCode.value,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirectWork) {\n      redirect = <Redirect to={this.props.redirectWork} />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Get a job\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    redirect: state.auth.redirect,\n    error: state.works.error,\n    loading: state.works.loading,\n    redirectWork: state.works.redirectWork,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetJob: (password, userId, jobId) =>\n      dispatch(actions.getJob(password, userId, jobId)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GetJob);\n","/home/vladichka/siteToHost/client/src/containers/Tasks/MyTasks.js",[],"/home/vladichka/siteToHost/client/src/containers/SelectedWorkWorkers/SelectedWorkWorkers.js",["294","295"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport UserComponent from \"../../components/User/User\";\nimport classes from \"./SelectedWorkWorkers.module.css\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass SelectedWorkWorkers extends Component {\n  state = {\n    workId: \"lol\",\n  };\n  componentDidMount() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const workId = params.get(\"workId\");\n    this.setState({ workId: workId });\n    if (this.props.jobWorkers.length != 0) {\n      this.props.onSetEmptyWorkers();\n    }\n    this.props.onUploadWorkers(workId, this.props.userId, this.props.token);\n  }\n  render() {\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let error = null;\n    if (this.props.error) {\n      error = <div>{this.props.error}</div>;\n    }\n    console.log(this.props.jobWorkers);\n\n    let workersToRender = this.props.jobWorkers.map((worker) => {\n      return (\n        <UserComponent\n          selectedUserId={worker.userId}\n          userName={worker.nickname}\n          userRating={\"high\"}\n          userTasks={2}\n          workId={this.state.workId}\n          avatar={worker.avatar ? worker.avatar : null}\n        />\n      );\n    });\n    return (\n      <React.Fragment>\n        {error}\n        {spinner}\n        <ul className={classes.UserList}>{workersToRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.jobWorkers.error,\n    redirect: state.auth.redirect,\n    loading: state.jobWorkers.loading,\n    jobWorkers: state.jobWorkers.workers,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    onUploadWorkers: (workId, userId, token) =>\n      dispatch(actions.uploadWorkers(workId, userId, token)),\n    onSetEmptyWorkers: () => dispatch(actions.setEmptyWorkers()),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedWorkWorkers);\n","/home/vladichka/siteToHost/client/src/containers/SelectedTasks/SelectedTasks.js",[],"/home/vladichka/siteToHost/client/src/containers/Reports/Reports.js",[],"/home/vladichka/siteToHost/client/src/containers/Profile/Profile.js",["296","297","298"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./Profile.module.css\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport avatar from \"../../components/User/pngguru.com.png\";\n\nconst Profile = (props) => {\n\n  const [error, setError] = useState(null);\n  const [pictures, setPictures] = useState([]);\n  const onDrop = (picture) => {\n    setPictures(pictures.concat(picture));\n    console.log(pictures);\n  };\n  useEffect(() => {\n    console.log(\"chpyk\");\n    props.onUploadProfile(props.userId, props.token);\n  }, []);\n  const uploadPhoto = () => {\n    console.log(pictures);\n    if (pictures.length == 0 || pictures.length > 1) {\n      setError(\"Select only one image with a supported extension\");\n    } else {\n      props.onUploadImage(props.userId, props.token, pictures[0]);\n    }\n    //lol\n  };\n  let avatarElement = null;\n  if (props.loading) {\n    avatarElement = <div className={classes.loader}>Loading...</div>;\n  } else {\n    let srcAvatar = props.avatar ? props.avatar : avatar;\n    avatarElement = <img className={classes.Photo} src={srcAvatar}></img>;\n  }\n\n  return (\n    <div className={classes.Card}>\n      <style>\n        @import\n        url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n      </style>\n      <div className={classes.NickName}>{props.nickname}</div>\n      {avatarElement}\n      <ImageUploader\n        withIcon={true}\n        buttonText=\"Select image\"\n        onChange={onDrop}\n        imgExtension={[\".jpg\", \".jpeg\", \".png\"]}\n        maxFileSize={5242880}\n      />\n      <div className={classes.ErrorMessage}>{error}</div>\n      <button className={classes.ConfirmButton} onClick={uploadPhoto}>\n        Upload Photo\n      </button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    avatar: state.auth.avatar,\n    nickname: state.auth.nickname,\n    loading: state.auth.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadImage: (ownerId, token, photoFile) =>\n      dispatch(actions.uploadImage(ownerId, token, photoFile)),\n    onUploadProfile: (userId, token) =>\n      dispatch(actions.uploadProfile(userId, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","/home/vladichka/siteToHost/client/src/components/About/About.js",["299","300","301","302","303","304"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./About.module.css\";\nimport AboutProjectImg from \"./img/AboutProject.jpg\";\nimport developerTaras from \"./img/taras.jpg\";\nimport developerVlad from \"./img/vlad.jpg\";\nimport instagram from \"./img/instagram.png\";\nimport * as actions from \"../../store/actions/index\";\nconst About = (props) => {\n  useEffect(() => {\n    props.setRedirectPath(\"null\");\n    props.setRedirectWorkPath(\"null\");\n  }, []);\n\n  return (\n    <div className={classes.About}>\n      <h3>Strong Manager</h3>\n      <h2>What we do</h2>\n      <hr />\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat\n      </p>\n      <div className={classes.AboutProject}>\n        <div className={classes.AboutProjectImg}>\n          <img src={AboutProjectImg} />\n        </div>\n        <div className={classes.AboutProjectText}>\n          <div className={classes.TextContainer}>\n            <h4>Organization</h4>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n          <div className={classes.TextContainer}>\n            <h4>Team Work</h4>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n          <div className={classes.TextContainer}>\n            <h4>Management</h4>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n        </div>\n      </div>\n      <h3 className={classes.weAre}>Who we are</h3>\n      <h2>Meet our team</h2>\n      <hr />\n      <div className={classes.Team}>\n        <div className={classes.developer}>\n          <img src={developerVlad} />\n          <h2>Vlad Boichuk</h2>\n          <h3>Project Manager</h3>\n          <a\n            href=\"https://www.instagram.com/vla2383public/?hl=ru\"\n            target=\"blank\"\n          >\n            <img src={instagram} />\n          </a>\n        </div>\n        <div className={classes.developer}>\n          <img src={developerTaras} />\n          <h2>Taras Hnatkiv</h2>\n          <h3>Project Manager</h3>\n          <a\n            href=\"https://www.instagram.com/chelovek_afk/?hl=ru\"\n            target=\"blank\"\n          >\n            <img src={instagram} />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.token,\n    userId: state.userId,\n    error: state.error,\n    redirect: state.redirect,\n    loading: state.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\n","/home/vladichka/siteToHost/client/src/store/sagas/work.js",["305"],"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/work\";\nimport axios from \"axios\";\nimport getUserWorks from \"../../functions/getUserWorks\";\nexport function* createWorkSaga(action) {\n  let name = action.name;\n  let description = action.description;\n  let userId = action.userId;\n  let token = action.token;\n  yield put(actions.createWorkStart());\n  if (name.length < 1 || name.length > 50) {\n    yield put(\n      actions.createWorkFail(\n        \"Ooops, name has to be between 1 and 20 characters!\"\n      )\n    );\n  } else if (description.length < 3 || description.length > 500) {\n    yield put(\n      actions.createWorkFail(\n        \"Ooops, description has to be between 3 and 500 characters!\"\n      )\n    );\n  } else {\n    let work = {\n      name: name,\n      description: description,\n      ownerId: userId,\n      workers: [],\n    };\n    try {\n      let response = yield axios.get(\n        \"https://www.uuidgenerator.net/api/version1\"\n      );\n      work = { ...work, password: response.data };\n      yield axios.post(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`,\n        work\n      );\n      yield put(actions.createWorkSuccess());\n    } catch (error) {\n      if (typeof error == \"string\") yield put(actions.createWorkFail(error));\n      else yield put(actions.createWorkFail(\"Ooops, some propblem exists\"));\n    }\n  }\n}\nexport function* uploadWorksSaga(action) {\n  let userId = action.userId;\n  let token = action.token;\n  yield put(actions.uploadWorksStart());\n  try {\n    let response = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n    );\n    yield put(actions.uploadWorksSuccess(getUserWorks(userId, response.data)));\n  } catch (error) {\n    if (typeof error == \"string\") yield put(actions.uploadWorksFail(error));\n    else yield put(actions.uploadWorksFail(\"Ooops, some propblem exists\"));\n  }\n}\nexport function* removeWorkSaga(action) {\n  let prevWorks = action.prevWorks;\n  let workId = action.workId;\n  let token = action.token;\n  yield put(actions.removeWorkStart());\n  try {\n    yield axios.delete(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`\n    );\n    let newWorks = [];\n    for (let i = 0; i < prevWorks.length; i++) {\n      if (prevWorks[i].id != workId) {\n        newWorks.push(prevWorks[i]);\n      }\n    }\n    yield put(actions.removeWorkSuccess(newWorks));\n  } catch (err) {\n    if (typeof err == \"string\") yield put(actions.removeWorkFail(err));\n    else yield put(actions.removeWorkFail(\"Ooops, some propblem exists\"));\n  }\n}\n","/home/vladichka/siteToHost/client/src/store/sagas/auth.js",["306","307","308","309"],"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/auth\";\nimport axios from \"axios\";\nvar config = {\n  apiKey: '<your-api-key>',\n  authDomain: '<your-auth-domain>',\n  databaseURL: '<your-database-url>',\n  storageBucket: '<your-storage-bucket>'\n};\n\nexport function* authSaga(action) {\n  let nickname = action.nickname;\n  let password = action.password;\n  let repeatPassword = action.repeatPassword;\n  let login = action.login;\n\n  yield put(actions.authStart());\n  if (nickname.length < 4 || nickname.length > 25) {\n    yield put(\n      actions.authFail(\"Ooops, nickname has to be between 4 and 25 characters!\")\n    );\n  } else if (\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      login\n    ) == false\n  ) {\n    yield put(actions.authFail(\"Ooops, it seems that email isn't correct!\"));\n  } else if (password.length < 6 || password.length > 20) {\n    yield put(\n      actions.authFail(\"Ooops, password has to be between 6 and 20 characters!\")\n    );\n  } else if (repeatPassword !== password) {\n    yield put(actions.authFail(\"Ooops, passwords do not match!\"));\n  } else {\n    const authData = {\n      email: login,\n      password: password,\n      returnSecureToken: true,\n    };\n    try {\n      let response = yield axios.post(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n        authData\n      );\n      yield put(\n        actions.authSuccess(\n          response.data.idToken,\n          response.data.localId,\n          nickname\n        )\n      );\n      let responseUser = yield axios.post(\n        `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`,\n        {\n          nickname: nickname,\n          userId: response.data.localId,\n          rating: \"0/0\",\n          tasks: [],\n        }\n      );\n    } catch (err) {\n      if (typeof err == \"string\") yield put(actions.authFail(err));\n      else\n        yield put(\n          actions.authFail(\"Ooops user with this email already exists\")\n        );\n    }\n  }\n}\nexport function* loginSaga(action) {\n  let login = action.login;\n  let password = action.password;\n  yield put(actions.loginStart());\n  if (\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      login\n    ) == false\n  ) {\n    yield put(actions.loginFail(\"Ooops, it seems that email isn't correct!\"));\n  } else if (password.length < 6 || password.length > 20) {\n    yield put(\n      actions.loginFail(\n        \"Ooops, password has to be between 6 and 20 characters!\"\n      )\n    );\n  } else {\n    const authData = {\n      email: login,\n      password: password,\n      returnSecureToken: true,\n    };\n    try {\n      let response = yield axios.post(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n        authData\n      );\n      yield (document.cookie = `userManagement=${response.data.localId};max-age=3600`);\n      yield (document.cookie = `tokenManagement=${response.data.idToken};max-age=3600`);\n      yield put(\n        actions.loginSuccess(response.data.idToken, response.data.localId)\n      );\n    } catch (err) {\n      if (typeof err == \"string\") yield put(actions.loginFail(err));\n      else\n        yield put(actions.loginFail(\"Ooops, login or password is incorrect\"));\n    }\n  }\n}\n/*export function* googleAuth(action) {\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      let credential = result.credential;\n\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      let token = credential.accessToken;\n      // The signed-in user info.\n      let user = result.user;\n      console.log(result);\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      console.log(error);\n    });\n    ///LOGOUT GOOGLE\n}\n*/","/home/vladichka/siteToHost/client/src/store/sagas/workers.js",["310","311","312","313","314"],"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/workers\";\nimport axios from \"axios\";\nimport getWorkersByWork from \"../../functions/getWorkersByWork\";\nexport function* uploadWorkersSaga(action) {\n  let workId = action.workId;\n  let userId = action.userId;\n  let token = action.token;\n  yield put(actions.uploadWorkersStart());\n  try {\n    let response = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n    );\n    let selectedWork = response.data[workId];\n    if (selectedWork.ownerId != userId)\n      throw \"Oooops, you dont have enough permissions to upload this page\";\n    let responseTwo = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`\n    );\n    let allWorkersArray = getWorkersByWork(responseTwo.data, selectedWork);\n    yield put(actions.uploadWorkersSuccess(allWorkersArray.workers));\n  } catch (error) {\n    if (typeof error == \"string\") yield put(actions.uploadWorkersFail(error));\n    else yield put(actions.uploadWorkersFail(\"Ooops, something went wrong\"));\n  }\n}\nexport function* deleteWorkerSaga(action) {\n  let token = action.token;\n  let workId = action.workId;\n  let userId = action.userId;\n  yield put(actions.deleteWorkerStart());\n  try {\n    let response = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`\n    );\n    let currentWorkers = response.data.workers;\n    let indexUserId = currentWorkers.indexOf(userId);\n    if (indexUserId > -1) {\n      currentWorkers.splice(indexUserId, 1);\n    }\n    yield axios.patch(\n      `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`,\n      response.data\n    );\n    let allTasksObject = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`\n    );\n    let tasksToDelete = [];\n    let allTasksObjectData = allTasksObject.data;\n    Object.keys(allTasksObjectData).map((key) => {\n      console.log(key);\n      console.log(allTasksObjectData[key]);\n      if (\n        allTasksObjectData[key].workId == workId &&\n        allTasksObjectData[key].recipientId == userId\n      )\n        tasksToDelete.push({ ...allTasksObjectData[key], id: key });\n    });\n    console.log(tasksToDelete);\n    for (let i = 0; i < tasksToDelete.length; i++) {\n      yield axios.delete(\n        `https://strongmanagment-default-rtdb.firebaseio.com/tasks/${tasksToDelete[i].id}.json?auth=${token}`\n      );\n    }\n    yield put(actions.deleteWorkerSuccess(currentWorkers));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.deleteWorkerFail(error));\n  }\n}\n","/home/vladichka/siteToHost/client/src/store/sagas/user.js",["315","316","317","318","319","320","321"],"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/user\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\nconst url = \"https://strongmanagement.herokuapp.com\";\nconst url2 = \"http://localhost:8000\";\nexport function* uploadImageSaga(action) {\n  console.log(url);\n  let userId = action.userId;\n  let token = action.token;\n  let image = action.photo;\n  console.log(image);\n  yield put(actions.uploadImageStart());\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    let response = yield axios.post(`${url2}/upload`, formData);\n    console.log(response);\n    let photoUrl = response.data.url;\n    let responseUsers = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`\n    );\n    let allUsersObject = responseUsers.data;\n    console.log(allUsersObject);\n    let neededUserDatabaseId = [];\n    Object.keys(allUsersObject).map((key) => {\n      if (allUsersObject[key].userId == userId) {\n        console.log(\"kakaka\");\n        neededUserDatabaseId.push({ ...allUsersObject[key], id: key });\n      }\n    });\n\n    if (photoUrl != \"error syka\") {\n      console.log(neededUserDatabaseId);\n      neededUserDatabaseId[0].avatar = photoUrl;\n      let updatedUser = yield axios.patch(\n        `https://strongmanagment-default-rtdb.firebaseio.com/users/${neededUserDatabaseId[0].id}.json?auth=${token}`,\n        neededUserDatabaseId[0]\n      );\n      console.log(photoUrl);\n      yield put(actions.uploadImageSuccess(photoUrl));\n    } else {\n      throw \"Error while uploading photo\";\n    }\n    console.log(response);\n  } catch (err) {\n    console.log(err);\n    if (typeof err == \"string\") yield put(actions.uploadImageFail(err));\n    else yield put(actions.uploadImageFail(\"Ooops, some problems exists\"));\n  }\n}\n\nexport function* uploadProfileSaga(action) {\n  let userId = action.userId;\n  let token = action.token;\n\n  yield put(actions.uploadProfileStart());\n  try {\n    let responseUsers = yield axios.get(\n      `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`\n    );\n    let allUsersObject = responseUsers.data;\n    console.log(allUsersObject);\n    let resultObject = {\n      nickname: \"\",\n      avatar: \"\",\n    };\n    Object.keys(allUsersObject).map((key) => {\n      if (allUsersObject[key].userId == userId) {\n        if (allUsersObject[key].avatar)\n          resultObject.avatar = allUsersObject[key].avatar;\n        resultObject.nickname = allUsersObject[key].nickname;\n      }\n    });\n    yield put(\n      actions.uploadProfileSuccess(resultObject.nickname, resultObject.avatar)\n    );\n  } catch (err) {\n    console.log(err);\n    if (typeof err == \"string\") yield put(actions.uploadProfileFail(err));\n    else yield put(actions.uploadProfileFail(\"Ooops, some problems exists\"));\n  }\n}\n","/home/vladichka/siteToHost/client/src/store/sagas/tasks.js",["322","323","324","325","326"],"/home/vladichka/siteToHost/client/src/store/actions/work.js",["327"],"import * as actionTypes from \"./actionTypes\";\n//CREATE\nimport getUserWorks from \"../../functions/getUserWorks\";\nexport const createWorkFail = (error) => {\n  return { type: actionTypes.CREATE_WORK_FAIL, error: error };\n};\nexport const createWorkStart = () => {\n  return { type: actionTypes.CREATE_WORK_START };\n};\nexport const createWorkSuccess = () => {\n  return {\n    type: actionTypes.CREATE_WORK_SUCCESS,\n  };\n};\nexport const createWork = (name, description, userId, token) => {\n  return {\n    type: actionTypes.CREATE_WORK_INITIATE,\n    name: name,\n    description: description,\n    userId: userId,\n    token: token,\n  };\n};\n//UPLOAD\nexport const uploadWorksStart = () => {\n  return { type: actionTypes.UPLOAD_WORKS_START };\n};\nexport const uploadWorksFail = (error) => {\n  return { type: actionTypes.UPLOAD_WORKS_FAIL, error: error };\n};\nexport const uploadWorksSuccess = (works) => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_SUCCESS,\n    works: works,\n  };\n};\nexport const uploadWorks = (userId, token) => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_INITIATE,\n    userId: userId,\n    token: token,\n  };\n};\n//REMOVE\nexport const removeWorkStart = () => {\n  return { type: actionTypes.REMOVE_WORK_START };\n};\nexport const removeWorkFail = (error) => {\n  return { type: actionTypes.REMOVE_WORK_FAIL, error: error };\n};\nexport const removeWorkSuccess = (works) => {\n  return {\n    type: actionTypes.REMOVE_WORK_SUCCESS,\n    works: works,\n  };\n};\nexport const removeWork = (workId, token, prevWorks) => {\n  return {\n    type: actionTypes.REMOVE_WORK_INITIATE,\n    workId: workId,\n    token: token,\n    prevWorks: prevWorks,\n  };\n};\n//\n//\n//\n","/home/vladichka/siteToHost/client/src/store/actions/workers.js",[],"/home/vladichka/siteToHost/client/src/store/actions/auth.js",[],"/home/vladichka/siteToHost/client/src/store/actions/reports.js",[],"/home/vladichka/siteToHost/client/src/store/actions/user.js",[],"/home/vladichka/siteToHost/client/src/store/actions/job.js",[],"/home/vladichka/siteToHost/client/src/store/actions/tasks.js",[],"/home/vladichka/siteToHost/client/src/functions/getWorkByPassword.js",["328"],"function getWorkByPassword(workObject, password) {\n  let workArray = Object.keys(workObject).map((key) => {\n    return { ...workObject[key], id: key };\n  });\n  for (let i = 0; i < workArray.length; i++) {\n    if (workArray[i].password == password) {\n      return { error: null, work: workArray[i] };\n    }\n  }\n\n  return { error: \"There is no work with this password\", work: null };\n}\nexport default getWorkByPassword;\n","/home/vladichka/siteToHost/client/src/store/actions/actions.js",["329"],"import * as actionTypes from \"./actionTypes\";\nexport const setPath = (path) => {\n  return { type: actionTypes.SET_PATH, path: path };\n};\nexport const setRedirectPath = (path) => {\n  return (dispatch) => {\n    if (path == \"null\") {\n      dispatch(setPath(\"null\"));\n    } else {\n      dispatch(setPath(path));\n    }\n  };\n};\nexport const setRedirectWorkPath = (path) => {\n  return { type: actionTypes.SET_REDIRECT_WORK_PATH, path: path };\n};\nexport const setEmptyWorkers = () => {\n  return {\n    type: actionTypes.SET_EMPTY_WORKERS,\n  };\n};\nexport const autoSignUpSuccess = (userId, token) => {\n  return {\n    type: actionTypes.AUTO_SIGN_UP_SUCCES,\n    userId: userId,\n    token: token,\n  };\n};\nexport const autoSignUp = (userId, token) => {\n  return (dispatch) => {\n    dispatch(autoSignUpSuccess(userId, token));\n  };\n};\n\n","/home/vladichka/siteToHost/client/src/functions/getUserWorks.js",["330","331"],"function getUserWorks(userId, worksObject) {\n  let worksArray = [];\n  Object.keys(worksObject).map((key) => {\n    if (worksObject[key].ownerId == userId) {\n      worksArray.push({ ...worksObject[key], id: key });\n    }\n  });\n  return worksArray;\n}\nexport default getUserWorks;","/home/vladichka/siteToHost/client/src/functions/getWorkersByWork.js",[],"/home/vladichka/siteToHost/client/src/functions/validity.js",[],"/home/vladichka/siteToHost/client/src/containers/Tasks/TaskConponent/TaskComponent.js",["332"],"import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport classes from \"./TaskComponent.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\nimport { withRouter } from \"react-router-dom\";\nclass TaskComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  leaveWorkClick = () => {\n    this.props.onLeaveWork(\n      this.props.info.id,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  redirectClick = () => {\n    this.props.history.push(`selectedTasks?workId=${this.props.info.id}`);\n  };\n\n  render() {\n    return (\n      <li className={classes.Work}>\n          <div className={classes.number}>#{this.props.index+1}</div>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i className={\"fas fa-door-open\"}></i>\n          </div>\n          <div className={classes.Label}>{this.props.info.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.info.description}\n        </div>\n        <div className={classes.UserGroup}>\n          <div> Workers:</div>\n          <div>\n            <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n          </div>\n          <div>\n            <font className={classes.UsersGroupValue}>\n              {this.props.info.workers.length\n                ? this.props.info.workers.length\n                : 0}\n            </font>\n          </div>\n        </div>\n        <div onClick={this.redirectClick} className={classes.TaskGroup}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          <div>Tasks:</div>\n          <div className={classes.TaskGroupValue}>\n            <i class=\"fas fa-tasks\"></i>\n          </div>\n          <div className={classes.TaskGroupValue}>\n            {this.props.info.tasks.length}\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Leave Work</h1>\n            <p className={classes.confirm}>\n              Are you sure you want to leave your work?\n            </p>\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={this.leaveWorkClick}\n                type=\"button\"\n                className={classes.deletebtn}\n              >\n                Leave\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLeaveWork: (workId, userId, token) =>\n      dispatch(actions.leaveWork(workId, userId, token)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TaskComponent));\n","/home/vladichka/siteToHost/client/src/components/Report/Report.js",[],"/home/vladichka/siteToHost/client/src/components/Task/Task.js",[],"/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/Toolbar.js",["333","334"],"import React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./Toolbar.module.css\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\nimport Logo from \"./Logo/Logo\";\n\nconst Toolbar = (props) => {\n  const [clicked, setClick] = useState(false);\n \n  const handleClick = () => {\n    setClick(!clicked);\n  };\n  \n  return (\n    <header className={classes.Toolbar}>\n      <Logo />\n      <NavigationItems myRef={handleClick} clicked={clicked} />\n      <div\n        className={\n          clicked\n            ? [classes.active, classes.headerBurger].join(\" \")\n            : classes.headerBurger\n        }\n        onClick={handleClick}\n      >\n        <span></span>\n      </div>\n    </header>\n  );\n};\nexport default Toolbar;\n","/home/vladichka/siteToHost/client/src/components/UI/Card/Card.js",[],"/home/vladichka/siteToHost/client/src/components/UI/Button/Button.js",[],"/home/vladichka/siteToHost/client/src/components/UI/Input/Input.js",[],"/home/vladichka/siteToHost/client/src/components/UI/Spinner/Spinner.js",[],"/home/vladichka/siteToHost/client/src/components/User/User.js",["335","336","337","338"],"/home/vladichka/siteToHost/client/src/components/Works/WorkComponent/WorkComponent.js",["339","340","341"],"import React, { Component } from \"react\";\nimport classes from \"./WorkComponent.module.css\";\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport { Redirect, NavLink } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass WorkComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    console.log(\"pyk\");\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  removeWork = (workId) => {\n    this.props.onRemoveWork(workId, this.props.token, this.props.works);\n  };\n  redirectClick = () => {\n    this.props.history.push(`selectedWorkers?workId=${this.props.workId}`);\n  };\n\n  render() {\n    console.log(this.props);\n\n    let redirect = null;\n    if (this.props.redirectWork) {\n      redirect = <Redirect to={this.props.redirectWork} />;\n    }\n    return (\n      <li className={classes.Work}>\n          <div className={classes.number}>#{this.props.index+1}</div>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i class=\"fas fa-trash-alt\"></i>\n          </div>\n          <div className={classes.Label}>{this.props.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.description}\n        </div>\n\n        <div className={classes.Password}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\n          </style>\n          <div>password:</div>\n          <div className={classes.PasswordFont}>{this.props.password}</div>\n          <CopyToClipboard onCopy={this.props.copyFunc} text={this.props.password}>\n            <div className={classes.clipBoard}>\n              <i class={\"far fa-copy\"}></i>\n            </div>\n          </CopyToClipboard>\n        </div>\n        <div onClick={this.redirectClick} className={classes.Users}>\n          <div className={classes.UserGroup}>\n            <i class=\"fa fa-users\" aria-hidden=\"true\">\n              :\n            </i>\n            <font className={classes.UsersGroupValue}>\n              {this.props.workers ? this.props.workers.length : 0}\n            </font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-user-tie\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-hospital-user\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Delete Work</h1>\n            <p>Are you sure you want to delete your work?</p>\n\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.removeWork(this.props.workId)}\n                className={classes.deletebtn}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    redirectWork: state.works.redirectWork,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveWork: (id, token, oldWorks) =>\n      dispatch(actions.removeWork(id, token, oldWorks)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(WorkComponent));\n","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js",["342"],"import React, { Component } from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport { connect } from \"react-redux\";\nconst NavigationItems = (props) => {\n  let links = [];\n  if (props.token) {\n    links = [\n      { link: \"/profile\", label: \"My Profile\" },\n      { link: \"/workersReports\", label: \"Workers reports\" },\n      { link: \"/myTasks\", label: \"My tasks\" },\n      { link: \"/getJob\", label: \"Get job\" },\n      { link: \"/myWorks\", label: \"My works\" },\n      { link: \"/createNewJob\", label: \"Create work\" },\n      { link: \"/about\", label: \"About\" },\n      { link: \"/logout\", label: \"Log out\" },\n   \n    ];\n  } else {\n    links = [\n      { link: \"/login\", label: \"Log in\" },\n      { link: \"/auth\", label: \"Registration\" },\n      { link: \"/about\", label: \"About\" },\n    ];\n  }\n  let linksElements = links.map((element, id) => {\n    return (\n      <NavigationItem {...props} link={element.link} key={id}>\n        {element.label}\n      </NavigationItem>\n    );\n  });\n  return (\n    <nav\n      className={\n        props.clicked\n          ? [classes.active, classes.headerMenu].join(\" \")\n          : classes.headerMenu\n      }\n    >\n      <ul className={classes.NavigationItems}>{linksElements}</ul>\n    </nav>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps)(NavigationItems);\n","/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/Logo/Logo.js",[],"/home/vladichka/siteToHost/client/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js",["343","344","345"],"import React, { useEffect, useCallback } from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../../store/actions/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSocket } from \"../../../../../contexts/SocketProvider\";\nconst NavigationItem = (props) => {\n  const updateTaskCount = useCallback(() => {\n    props.getTasksNumber(props.token, props.userId);\n  }, [props.token, props.userId]);\n  const socket = useSocket();\n  useEffect(() => {\n    if (props.token && props.link == \"/myTasks\") {\n      if (socket == null) return;\n      socket.on(\"update-task\", updateTaskCount);\n      return () => socket.off(\"update-task\");\n    }\n  }, [socket, props.token, props.link, updateTaskCount]);\n\n  let notification = null;\n  if (props.link == \"/myTasks\" && props.countTasks > 0) {\n    notification = <span className={classes.number}>{props.countTasks}</span>;\n  }\n  return (\n    <li onClick={props.myRef} className={classes.NavigationItem}>\n      <style>\n        @import\n        url('https://fonts.googleapis.com/css2?family=Varela+Round&display=swap');\n      </style>\n      <NavLink to={props.link} exact activeClassName={classes.active}>\n        {props.children}\n        {notification}\n      </NavLink>\n    </li>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    countTasks: state.tasks.countTasks,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTasksNumber: (token, userId) =>\n      dispatch(actions.getTasksNumber(token, userId)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationItem);\n\n// export default NavigationItem;\n","/home/vladichka/siteToHost/client/src/contexts/SocketProvider.js",[],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":28},{"ruleId":"350","severity":1,"message":"354","line":21,"column":8,"nodeType":"352","messageId":"353","endLine":21,"endColumn":13},{"ruleId":"355","severity":1,"message":"356","line":29,"column":26,"nodeType":"357","messageId":"358","endLine":29,"endColumn":28},{"ruleId":"355","severity":1,"message":"356","line":29,"column":53,"nodeType":"357","messageId":"358","endLine":29,"endColumn":55},{"ruleId":"359","severity":1,"message":"360","line":34,"column":6,"nodeType":"361","endLine":34,"endColumn":23,"suggestions":"362"},{"ruleId":"355","severity":1,"message":"356","line":79,"column":23,"nodeType":"357","messageId":"358","endLine":79,"endColumn":25},{"ruleId":"363","severity":1,"message":"364","line":50,"column":7,"nodeType":"365","messageId":"366","endLine":50,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":71,"column":23,"nodeType":"357","messageId":"358","endLine":71,"endColumn":25},{"ruleId":"355","severity":1,"message":"367","line":10,"column":23,"nodeType":"357","messageId":"358","endLine":10,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":19,"column":29,"nodeType":"370","messageId":"371","endLine":19,"endColumn":57},{"ruleId":"355","severity":1,"message":"356","line":28,"column":31,"nodeType":"357","messageId":"358","endLine":28,"endColumn":33},{"ruleId":"368","severity":1,"message":"369","line":29,"column":15,"nodeType":"370","messageId":"371","endLine":29,"endColumn":52},{"ruleId":"355","severity":1,"message":"367","line":63,"column":30,"nodeType":"357","messageId":"358","endLine":63,"endColumn":32},{"ruleId":"355","severity":1,"message":"367","line":71,"column":65,"nodeType":"357","messageId":"358","endLine":71,"endColumn":67},{"ruleId":"372","severity":1,"message":"373","line":78,"column":47,"nodeType":"374","messageId":"375","endLine":78,"endColumn":49},{"ruleId":"355","severity":1,"message":"356","line":82,"column":40,"nodeType":"357","messageId":"358","endLine":82,"endColumn":42},{"ruleId":"355","severity":1,"message":"356","line":83,"column":45,"nodeType":"357","messageId":"358","endLine":83,"endColumn":47},{"ruleId":"350","severity":1,"message":"376","line":1,"column":15,"nodeType":"352","messageId":"353","endLine":1,"endColumn":21},{"ruleId":"372","severity":1,"message":"373","line":42,"column":42,"nodeType":"374","messageId":"375","endLine":42,"endColumn":44},{"ruleId":"355","severity":1,"message":"356","line":43,"column":38,"nodeType":"357","messageId":"358","endLine":43,"endColumn":40},{"ruleId":"350","severity":1,"message":"377","line":6,"column":13,"nodeType":"352","messageId":"353","endLine":6,"endColumn":24},{"ruleId":"350","severity":1,"message":"377","line":6,"column":13,"nodeType":"352","messageId":"353","endLine":6,"endColumn":24},{"ruleId":"378","severity":1,"message":"379","line":164,"column":15,"nodeType":"380","endLine":168,"endColumn":16},{"ruleId":"378","severity":1,"message":"379","line":172,"column":15,"nodeType":"380","endLine":172,"endColumn":62},{"ruleId":"355","severity":1,"message":"367","line":20,"column":25,"nodeType":"357","messageId":"358","endLine":20,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":22,"column":7,"nodeType":"383","endLine":22,"endColumn":17},{"ruleId":"355","severity":1,"message":"356","line":35,"column":38,"nodeType":"357","messageId":"358","endLine":35,"endColumn":40},{"ruleId":"350","severity":1,"message":"384","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":18},{"ruleId":"350","severity":1,"message":"377","line":7,"column":13,"nodeType":"352","messageId":"353","endLine":7,"endColumn":24},{"ruleId":"355","severity":1,"message":"356","line":152,"column":60,"nodeType":"357","messageId":"358","endLine":152,"endColumn":62},{"ruleId":"350","severity":1,"message":"377","line":6,"column":13,"nodeType":"352","messageId":"353","endLine":6,"endColumn":24},{"ruleId":"350","severity":1,"message":"385","line":4,"column":10,"nodeType":"352","messageId":"353","endLine":4,"endColumn":20},{"ruleId":"355","severity":1,"message":"367","line":17,"column":38,"nodeType":"357","messageId":"358","endLine":17,"endColumn":40},{"ruleId":"359","severity":1,"message":"386","line":19,"column":6,"nodeType":"361","endLine":19,"endColumn":8,"suggestions":"387"},{"ruleId":"355","severity":1,"message":"356","line":22,"column":25,"nodeType":"357","messageId":"358","endLine":22,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":34,"column":21,"nodeType":"380","endLine":34,"endColumn":68},{"ruleId":"359","severity":1,"message":"386","line":13,"column":6,"nodeType":"361","endLine":13,"endColumn":8,"suggestions":"388"},{"ruleId":"378","severity":1,"message":"379","line":28,"column":11,"nodeType":"380","endLine":28,"endColumn":40},{"ruleId":"378","severity":1,"message":"379","line":59,"column":11,"nodeType":"380","endLine":59,"endColumn":38},{"ruleId":"378","severity":1,"message":"379","line":66,"column":13,"nodeType":"380","endLine":66,"endColumn":36},{"ruleId":"378","severity":1,"message":"379","line":70,"column":11,"nodeType":"380","endLine":70,"endColumn":39},{"ruleId":"378","severity":1,"message":"379","line":77,"column":13,"nodeType":"380","endLine":77,"endColumn":36},{"ruleId":"355","severity":1,"message":"367","line":71,"column":27,"nodeType":"357","messageId":"358","endLine":71,"endColumn":29},{"ruleId":"350","severity":1,"message":"389","line":4,"column":5,"nodeType":"352","messageId":"353","endLine":4,"endColumn":11},{"ruleId":"355","severity":1,"message":"356","line":25,"column":7,"nodeType":"357","messageId":"358","endLine":25,"endColumn":9},{"ruleId":"350","severity":1,"message":"390","line":52,"column":11,"nodeType":"352","messageId":"353","endLine":52,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":77,"column":7,"nodeType":"357","messageId":"358","endLine":77,"endColumn":9},{"ruleId":"355","severity":1,"message":"367","line":15,"column":30,"nodeType":"357","messageId":"358","endLine":15,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":16,"column":7,"nodeType":"370","messageId":"371","endLine":16,"endColumn":76},{"ruleId":"372","severity":1,"message":"373","line":50,"column":47,"nodeType":"374","messageId":"375","endLine":50,"endColumn":49},{"ruleId":"355","severity":1,"message":"356","line":54,"column":40,"nodeType":"357","messageId":"358","endLine":54,"endColumn":42},{"ruleId":"355","severity":1,"message":"356","line":55,"column":45,"nodeType":"357","messageId":"358","endLine":55,"endColumn":47},{"ruleId":"372","severity":1,"message":"373","line":26,"column":43,"nodeType":"374","messageId":"375","endLine":26,"endColumn":45},{"ruleId":"355","severity":1,"message":"356","line":27,"column":38,"nodeType":"357","messageId":"358","endLine":27,"endColumn":40},{"ruleId":"355","severity":1,"message":"367","line":33,"column":18,"nodeType":"357","messageId":"358","endLine":33,"endColumn":20},{"ruleId":"350","severity":1,"message":"391","line":36,"column":11,"nodeType":"352","messageId":"353","endLine":36,"endColumn":22},{"ruleId":"368","severity":1,"message":"369","line":43,"column":7,"nodeType":"370","messageId":"371","endLine":43,"endColumn":43},{"ruleId":"372","severity":1,"message":"373","line":68,"column":43,"nodeType":"374","messageId":"375","endLine":68,"endColumn":45},{"ruleId":"355","severity":1,"message":"356","line":69,"column":38,"nodeType":"357","messageId":"358","endLine":69,"endColumn":40},{"ruleId":"355","severity":1,"message":"356","line":27,"column":40,"nodeType":"357","messageId":"358","endLine":27,"endColumn":42},{"ruleId":"355","severity":1,"message":"356","line":29,"column":23,"nodeType":"357","messageId":"358","endLine":29,"endColumn":25},{"ruleId":"355","severity":1,"message":"356","line":82,"column":33,"nodeType":"357","messageId":"358","endLine":82,"endColumn":35},{"ruleId":"355","severity":1,"message":"356","line":83,"column":38,"nodeType":"357","messageId":"358","endLine":83,"endColumn":40},{"ruleId":"355","severity":1,"message":"356","line":105,"column":34,"nodeType":"357","messageId":"358","endLine":105,"endColumn":36},{"ruleId":"350","severity":1,"message":"392","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":20},{"ruleId":"355","severity":1,"message":"356","line":6,"column":31,"nodeType":"357","messageId":"358","endLine":6,"endColumn":33},{"ruleId":"355","severity":1,"message":"356","line":7,"column":14,"nodeType":"357","messageId":"358","endLine":7,"endColumn":16},{"ruleId":"372","severity":1,"message":"373","line":3,"column":38,"nodeType":"374","messageId":"375","endLine":3,"endColumn":40},{"ruleId":"355","severity":1,"message":"356","line":4,"column":34,"nodeType":"357","messageId":"358","endLine":4,"endColumn":36},{"ruleId":"350","severity":1,"message":"393","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":25},{"ruleId":"350","severity":1,"message":"394","line":1,"column":27,"nodeType":"352","messageId":"353","endLine":1,"endColumn":33},{"ruleId":"350","severity":1,"message":"395","line":1,"column":35,"nodeType":"352","messageId":"353","endLine":1,"endColumn":44},{"ruleId":"350","severity":1,"message":"396","line":163,"column":5,"nodeType":"352","messageId":"353","endLine":163,"endColumn":12},{"ruleId":"355","severity":1,"message":"356","line":169,"column":48,"nodeType":"357","messageId":"358","endLine":169,"endColumn":50},{"ruleId":"350","severity":1,"message":"397","line":170,"column":5,"nodeType":"352","messageId":"353","endLine":170,"endColumn":13},{"ruleId":"378","severity":1,"message":"379","line":185,"column":11,"nodeType":"380","endLine":185,"endColumn":55},{"ruleId":"350","severity":1,"message":"398","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":15},{"ruleId":"350","severity":1,"message":"399","line":8,"column":20,"nodeType":"352","messageId":"353","endLine":8,"endColumn":27},{"ruleId":"350","severity":1,"message":"397","line":38,"column":7,"nodeType":"352","messageId":"353","endLine":38,"endColumn":15},{"ruleId":"350","severity":1,"message":"400","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":26},{"ruleId":"359","severity":1,"message":"401","line":10,"column":6,"nodeType":"361","endLine":10,"endColumn":33,"suggestions":"402"},{"ruleId":"355","severity":1,"message":"356","line":13,"column":35,"nodeType":"357","messageId":"358","endLine":13,"endColumn":37},{"ruleId":"355","severity":1,"message":"356","line":21,"column":18,"nodeType":"357","messageId":"358","endLine":21,"endColumn":20},"no-native-reassign",["403"],"no-negated-in-lhs",["404"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Outer scope values like 'document.cookie' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["405"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","Expected '!==' and instead saw '!='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'select' is defined but never used.","'actionTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'classesTwo' is defined but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["406"],["407"],"'config' is assigned a value but never used.","'responseUser' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","'getUserWorks' is defined but never used.","'CopyToClipboard' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'spinner' is assigned a value but never used.","'redirect' is assigned a value but never used.","'Spinner' is defined but never used.","'NavLink' is defined but never used.","'Component' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["408"],"no-global-assign","no-unsafe-negation",{"desc":"409","fix":"410"},{"desc":"409","fix":"411"},{"desc":"409","fix":"412"},{"desc":"409","fix":"413"},"Update the dependencies array to be: [props]",{"range":"414","text":"415"},{"range":"416","text":"415"},{"range":"417","text":"415"},{"range":"418","text":"415"},[1394,1411],"[props]",[633,635],[492,494],[460,487]]